.person-cards-container {
}

.person-card-list {
    padding: 20px;
    width: 100%;
    max-height: 100%;

    @include display-flex;
    @include justify-content(space-between);
    @include flex-wrap(wrap);
}

%panel {
    background: #f2f2f2;
    border: #d8d8d8 1px solid;
    padding: 1.25em;

    &:hover {
        background: darken(#f2f2f2, 2.5%);
    }
}

.person-card {
    @include flex-grow(1);
    width: 25%;
    margin: 10px;
    cursor: pointer;

    @include transform(scale3d(0.8, 0.8, 1));
    opacity: 0;
    @include transition(
        transform 0.2s ease 0s,
        opacity 0.2s ease 0s
        );

    &.display {
        opacity: 1;
        @include transform(scale3d(1,1,1));
    }

    &.hidden {
        display: none;
    }

    .short-info {
        @extend %panel;
    }

    .short-info {
        overflow: hidden;
        position: relative;
        height: 100%;

        .icon-destroy {
            position: absolute;
            top: 0;
            bottom: 0;
            right: -150px;
            width: 150px;
            height: 100%;

            @include flex-centre();
            @include transition(right 0.3s ease .2s);

            &:before {
                font-size: 4rem !important;
            }

        }

        &:hover .icon-destroy {
            right: 0;
        }
    }
}

.person-add-container > .js-edit,
.person-card.js-edit,
.person-card .short-info {
    position: relative;
    z-index: 2;
    @include transition(opacity 0.1s ease .8s);
}

.person-add-container > .js-edit.morph-active,
.person-card.morph-active .short-info {
    opacity: 0;
    @include transition(opacity 0.1s ease 0s);
}

body > .person-form {
    @extend %panel;
    padding: 0;
}

.person-add-container {
    .person-form {
        background-color: $primary-color;
    }
}

.no-transition {
    @include transition(none !important);
}

.person-form {
    overflow: hidden;
    max-height: 90%;

    position: fixed;
    z-index: 10;

    left: 0;
    top: 0;
    @include transform(none);

    @include transition-duration(.6s);
    @include transition-delay(.1s);
    @include transition-property(
        width,
        height,
        left,
        top,
        transform
        );
    @include transition-timing-function(cubic-bezier(0.7, 0, 0.3, 1));

    > form {
        visibility: hidden;
        opacity: 0;
        min-width: 400px;
        padding: 30px;
        @include transition(opacity .3s ease .6s);

        .row {
            $transition-start: .4;
            opacity: 0;
            @include transform(scale(.85));
            @include transition(transform .2s ease $transition-start * 1s);

            @for $i from 1 through 20 {
                &:nth-child(#{$i}) {
                    @include transition-delay(($transition-start + .05*$i) * 1s);
                }
            }
        }
    }

    &.morph-active {
        left: 50% !important;
        top: 50% !important;

        @include transform(translate(-50%, -50%));

        > form {
            opacity: 1;
            visibility: visible;

            .row {
                opacity: 1;
                @include transform(none);
            }
        }
    }
}